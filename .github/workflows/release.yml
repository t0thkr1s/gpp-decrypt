name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Generate changelog
      id: changelog
      run: |
        # Get the previous tag
        PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        
        if [ -z "$PREV_TAG" ]; then
          echo "CHANGELOG=Initial release" >> $GITHUB_OUTPUT
        else
          # Generate changelog between tags
          CHANGELOG=$(git log --pretty=format:"- %s (%h)" $PREV_TAG..HEAD)
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        fi
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## Changes in this Release
          
          ${{ steps.changelog.outputs.CHANGELOG }}
          
          ## Installation
          
          ### From PyPI
          ```bash
          pip install gpp-decrypt
          ```
          
          ### From Source
          ```bash
          git clone https://github.com/t0thkr1s/gpp-decrypt.git
          cd gpp-decrypt
          pip install .
          ```
          
          ## Usage
          
          ```bash
          # Decrypt from XML file
          gpp-decrypt -f groups.xml
          
          # Decrypt single cpassword
          gpp-decrypt -c <encrypted_password>
          ```
        draft: false
        prerelease: false
